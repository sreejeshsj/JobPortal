{"version":3,"file":"logger.js","sources":["../../../src/otel/logger.ts"],"sourcesContent":["import { diag, DiagLogLevel } from '@opentelemetry/api';\nimport { logger } from '@sentry/core';\n\n/**\n * Setup the OTEL logger to use our own logger.\n */\nexport function setupOpenTelemetryLogger(): void {\n  const otelLogger = new Proxy(logger as typeof logger & { verbose: (typeof logger)['debug'] }, {\n    get(target, prop, receiver) {\n      const actualProp = prop === 'verbose' ? 'debug' : prop;\n      return Reflect.get(target, actualProp, receiver);\n    },\n  });\n\n  // Disable diag, to ensure this works even if called multiple times\n  diag.disable();\n  diag.setLogger(otelLogger, DiagLogLevel.DEBUG);\n}\n"],"names":["logger","diag","DiagLogLevel"],"mappings":";;;;;AAGA;AACA;AACA;AACO,SAAS,wBAAwB,GAAS;AACjD,EAAE,MAAM,UAAA,GAAa,IAAI,KAAK,CAACA,cAAiE;AAChG,IAAI,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE;AAChC,MAAM,MAAM,aAAa,IAAA,KAAS,SAAA,GAAY,OAAA,GAAU,IAAI;AAC5D,MAAM,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,CAAC;AACtD,KAAK;AACL,GAAG,CAAC;;AAEJ;AACA,EAAEC,QAAI,CAAC,OAAO,EAAE;AAChB,EAAEA,QAAI,CAAC,SAAS,CAAC,UAAU,EAAEC,gBAAY,CAAC,KAAK,CAAC;AAChD;;;;"}